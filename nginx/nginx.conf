 # Nginx Proxy Manager Service
  nginx:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"     # Public HTTP Port
      - "443:443"   # Public HTTPS Port
      - "8090:81"     # Admin Web Port for Nginx Proxy Manager
    volumes:
      - ./data:/data
      - ./nginx.conf:/data/nginx/custom/http_top.conf  # Custom Nginx configuration
      - ./letsencrypt:/etc/letsencrypt  # Let's Encrypt SSL certificates storage
    depends_on:
      - frontend   # Ensure frontend service is started before nginx
      - backend    # Ensure backend service is started before nginx
      - adminer    # Ensure adminer service is started before nginx
    networks:
      - mynet

      server {

    
    listen 80;

    server_name localhost;

    location / {
        proxy_pass http://frontend:5173;  # Adjust frontend service port if needed
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
        proxy_pass http://backend:8000/api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /docs {
        proxy_pass http://backend:8000/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /redoc {
        proxy_pass http://backend:8000/redoc;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 8080;
    server_name localhost;

    location / {
        proxy_pass http://adminer:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# upstream backend {
#     server backend:8000;  # Use the service name defined in Docker Compose
# }

# server {
#     listen 80;
#     server_name dolodocker.mooo.com;

#     location / {
#         proxy_pass http://frontend;  # Use the service name defined in Docker Compose
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     location /api {
#         proxy_pass http://backend/api;  # Correct path to the backend service
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     location /docs {
#         proxy_pass http://backend/docs;  # Correct path to the backend service
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     location /redoc {
#         proxy_pass http://backend/redoc;  # Correct path to the backend service
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     # Add other locations for different paths as needed

#     # Error handling
#     error_page 404 /404.html;
#     location = /404.html {
#         root /usr/share/nginx/html;
#         internal;
#     }

#     # Error handling for server errors
#     error_page 500 502 503 504 /50x.html;
#     location = /50x.html {
#         root /usr/share/nginx/html;
#         internal;
#     }
# }
